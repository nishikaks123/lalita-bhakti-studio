mutation AddMovieToList($movieListId: UUID!, $movieId: UUID!, $position: Int!, $note: String) @auth(level: USER) {
  movieListEntry_insert(data: {
    movieListId: $movieListId,
    movieId: $movieId,
    position: $position,
    note: $note
  })
}

query GetPublicMovieLists @auth(level: PUBLIC) {
  movieLists(where: {isPublic: {eq: true}}) {
    id
    name
    description
    user {
      id
      displayName
      photoUrl
    }
  }
}

mutation CreateUserWithEmail($displayName: String!, $email: String!) @auth(level: PUBLIC) {
  user_insert(data: {
    displayName: $displayName,
    email: $email
  })
}

query GetMoviesByGenre($genre: String!) @auth(level: PUBLIC) {
  movies(where: {genres: {includes: $genre}}) {
    id
    title
    year
    runtime
    summary
  }
}